       Name               FCode    1.x 2.0 2.1 2.2 2.3                    Stack 
----------------------- ---------- --- --- --- --- ---  ---------------------------------------------------------
end0                    0x00  0x00  Y   Y   Y   Y   Y    ( -- )
b(lit)                  0x00  0x10  Y   Y   Y   Y   Y    ( -- n )
b(')                    0x00  0x11  Y   Y   Y   Y   Y    ( -- acf )
b(")                    0x00  0x12  Y   Y   Y   Y   Y    ( -- adr len )
bbranch                 0x00  0x13  Y   Y   Y   Y   Y    ( -- )
b?branch                0x00  0x14  Y   Y   Y   Y   Y    ( -- )
b(loop)                 0x00  0x15  Y   Y   Y   Y   Y    ( -- )
b(+loop)                0x00  0x16  Y   Y   Y   Y   Y    ( n -- )
b(do)                   0x00  0x17  Y   Y   Y   Y   Y    ( end start -- )
b(?do)                  0x00  0x18  Y   Y   Y   Y   Y    ( end start -- )
i                       0x00  0x19  Y   Y   Y   Y   Y    ( -- index )
j                       0x00  0x1a  Y   Y   Y   Y   Y    ( -- outerindex )
b(leave)                0x00  0x1b  Y   Y   Y   Y   Y    ( -- )
b(of)                   0x00  0x1c  Y   Y   Y   Y   Y    ( sel tstval - sel|none )
execute                 0x00  0x1d  Y   Y   Y   Y   Y    ( acf -- )
+                       0x00  0x1e  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
-                       0x00  0x1f  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
*                       0x00  0x20  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
/                       0x00  0x21  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
mod                     0x00  0x22  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
and                     0x00  0x23  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
or                      0x00  0x24  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
xor                     0x00  0x25  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
not                     0x00  0x26  Y   Y   Y   Y   Y    ( n1 -- n2 )
<<                      0x00  0x27  Y   Y   Y   Y   Y    ( n1 cnt -- n2 )
>>                      0x00  0x28  Y   Y   Y   Y   Y    ( n1 cnt -- n2 )
>>a                     0x00  0x29  Y   Y   Y   Y   Y    ( n1 cnt -- n2 )
/mod                    0x00  0x2a  Y   Y   Y   Y   Y    ( n1 n2 -- rem quot )
u/mod                   0x00  0x2b  Y   Y   Y   Y   Y    ( n1 n2 -- rem quot )
negate                  0x00  0x2c  Y   Y   Y   Y   Y    ( n1 -- n2 )
abs                     0x00  0x2d  Y   Y   Y   Y   Y    ( n1 -- n2 )
min                     0x00  0x2e  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
max                     0x00  0x2f  Y   Y   Y   Y   Y    ( n1 n2 -- n3 )
>r                      0x00  0x30  Y   Y   Y   Y   Y    ( n -- )
r>                      0x00  0x31  Y   Y   Y   Y   Y    ( -- n )
r@                      0x00  0x32  Y   Y   Y   Y   Y    ( -- n )
exit                    0x00  0x33  Y   Y   Y   Y   Y    ( -- )
0=                      0x00  0x34  Y   Y   Y   Y   Y    ( n -- flag )
0<>                     0x00  0x35  Y   Y   Y   Y   Y    ( n -- flag )
0<                      0x00  0x36  Y   Y   Y   Y   Y    ( n -- flag )
0<=                     0x00  0x37  Y   Y   Y   Y   Y    ( n -- flag )
0>                      0x00  0x38  Y   Y   Y   Y   Y    ( n -- flag )
0>=                     0x00  0x39  Y   Y   Y   Y   Y    ( n -- flag )
<                       0x00  0x3a  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
>                       0x00  0x3b  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
=                       0x00  0x3c  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
<>                      0x00  0x3d  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
u>                      0x00  0x3e  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
u<=                     0x00  0x3f  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
u<                      0x00  0x40  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
u>=                     0x00  0x41  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
>=                      0x00  0x42  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
<=                      0x00  0x43  Y   Y   Y   Y   Y    ( n1 n2 -- flag )
between                 0x00  0x44  Y   Y   Y   Y   Y    ( n min max -- flag )
within                  0x00  0x45  Y   Y   Y   Y   Y    ( n min max -- flag )
drop                    0x00  0x46  Y   Y   Y   Y   Y    ( n -- )
dup                     0x00  0x47  Y   Y   Y   Y   Y    ( n -- n n )
over                    0x00  0x48  Y   Y   Y   Y   Y    ( n1 n2 -- n1 n2 n1 )
swap                    0x00  0x49  Y   Y   Y   Y   Y    ( n1 n2 -- n2 n1 )
rot                     0x00  0x4a  Y   Y   Y   Y   Y    ( n1 n2 n3 -- n2 n3 n1 )
-rot                    0x00  0x4b  Y   Y   Y   Y   Y    ( n1 n2 n3 -- n3 n1 n2 )
tuck                    0x00  0x4c  Y   Y   Y   Y   Y    ( n1 n2 -- n2 n1 n2 )
nip                     0x00  0x4d  Y   Y   Y   Y   Y    ( n1 n2 -- n2 )
pick                    0x00  0x4e  Y   Y   Y   Y   Y    ( +n -- n2 )
roll                    0x00  0x4f  Y   Y   Y   Y   Y    ( +n -- )
?dup                    0x00  0x50  Y   Y   Y   Y   Y    ( n -- n | n n )
depth                   0x00  0x51  Y   Y   Y   Y   Y    ( -- +n )
2drop                   0x00  0x52  Y   Y   Y   Y   Y    ( n1 n2 -- )
2dup                    0x00  0x53  Y   Y   Y   Y   Y    ( n1 n2 -- n1 n2 n1 n2 )
2over                   0x00  0x54  Y   Y   Y   Y   Y    ( n1 n2 n3 n4 -- n1 n2 n3 n4 n1 n2 )
2swap                   0x00  0x55  Y   Y   Y   Y   Y    ( n1 n2 n3 n4 -- n3 n4 n1 n2 )
2rot                    0x00  0x56  Y   Y   Y   Y   Y    ( n1 n2 n3 n4 n5 n6 -- n3 n4 n5 n6 n1 n2 )
2/                      0x00  0x57  Y   Y   Y   Y   Y    ( n1 -- n2 )
u2/                     0x00  0x58  Y   Y   Y   Y   Y    ( n1 -- n2 )
2*                      0x00  0x59  Y   Y   Y   Y   Y    ( n1 -- n2 )
/c                      0x00  0x5a  Y   Y   Y   Y   Y    ( -- n )
/w                      0x00  0x5b  Y   Y   Y   Y   Y    ( -- n )
/l                      0x00  0x5c  Y   Y   Y   Y   Y    ( -- n )
/n                      0x00  0x5d  Y   Y   Y   Y   Y    ( -- n )
ca+                     0x00  0x5e  Y   Y   Y   Y   Y    ( n1 index -- n2 )
wa+                     0x00  0x5f  Y   Y   Y   Y   Y    ( n1 index -- n2 )
la+                     0x00  0x60  Y   Y   Y   Y   Y    ( n1 index -- n2 )
na+                     0x00  0x61  Y   Y   Y   Y   Y    ( n1 index -- n2 )
ca1+                    0x00  0x62  Y   Y   Y   Y   Y    ( n1 -- n2 )
wa1+                    0x00  0x63  Y   Y   Y   Y   Y    ( n1 -- n2 )
la1+                    0x00  0x64  Y   Y   Y   Y   Y    ( n1 -- n2 )
na1+                    0x00  0x65  Y   Y   Y   Y   Y    ( n1 -- n2 )
/c*                     0x00  0x66  Y   Y   Y   Y   Y    ( n1 -- n2 )
/w*                     0x00  0x67  Y   Y   Y   Y   Y    ( n1 -- n2 )
/l*                     0x00  0x68  Y   Y   Y   Y   Y    ( n1 -- n2 )
/n*                     0x00  0x69  Y   Y   Y   Y   Y    ( n1 -- n2 )
on                      0x00  0x6a  Y   Y   Y   Y   Y    ( adr -- )
off                     0x00  0x6b  Y   Y   Y   Y   Y    ( adr -- )
+!                      0x00  0x6c  Y   Y   Y   Y   Y    ( n adr -- )
@                       0x00  0x6d  Y   Y   Y   Y   Y    ( adr -- n )
l@                      0x00  0x6e  Y   Y   Y   Y   Y    ( adr -- L )
w@                      0x00  0x6f  Y   Y   Y   Y   Y    ( adr -- w )
<w@                     0x00  0x70  Y   Y   Y   Y   Y    ( adr -- w )
c@                      0x00  0x71  Y   Y   Y   Y   Y    ( adr -- b )
!                       0x00  0x72  Y   Y   Y   Y   Y    ( n adr -- )
l!                      0x00  0x73  Y   Y   Y   Y   Y    ( n adr -- )
w!                      0x00  0x74  Y   Y   Y   Y   Y    ( n adr -- )
c!                      0x00  0x75  Y   Y   Y   Y   Y    ( n adr -- )
2@                      0x00  0x76  Y   Y   Y   Y   Y    ( adr -- n1 n2 )
2!                      0x00  0x77  Y   Y   Y   Y   Y    ( n1 n2 adr -- )
move                    0x00  0x78  Y   Y   Y   Y   Y    ( adr1 adr2 cnt -- )
fill                    0x00  0x79  Y   Y   Y   Y   Y    ( adr cnt byte -- )
comp                    0x00  0x7a  Y   Y   Y   Y   Y    ( adr1 adr2 cnt -- n )
noop                    0x00  0x7b  Y   Y   Y   Y   Y    ( -- )
lwsplit                 0x00  0x7c  Y   Y   Y   Y   Y    ( L -- w.lo w.hi )
wljoin                  0x00  0x7d  Y   Y   Y   Y   Y    ( w.lo w.hi -- L )
lbsplit                 0x00  0x7e  Y   Y   Y   Y   Y    ( L -- b.lo b b b.hi )
bljoin                  0x00  0x7f  Y   Y   Y   Y   Y    ( b.lo b b b.hi -- L )
flip                    0x00  0x80  Y   Y   Y   Y   Y    ( w1 -- w2 )
upc                     0x00  0x81  Y   Y   Y   Y   Y    ( char -- upper-case-char )
lcc                     0x00  0x82  Y   Y   Y   Y   Y    ( char -- lower-case-char )
pack                    0x00  0x83  Y   Y   Y   Y   Y    ( adr len pstr -- pstr )
count                   0x00  0x84  Y   Y   Y   Y   Y    ( pstr -- adr len )
body>                   0x00  0x85  Y   Y   Y   Y   Y    ( apf -- acf )
>body                   0x00  0x86  Y   Y   Y   Y   Y    ( acf -- apf )
version                 0x00  0x87  Y   Y   Y   Y   Y    ( -- n )
span                    0x00  0x88  Y   Y   Y   Y   Y    ( -- adr )
expect                  0x00  0x8a  Y   Y   Y   Y   Y    ( adr +n -- )
alloc-mem               0x00  0x8b  Y   Y   Y   Y   Y    ( cnt -- adr )
free-mem                0x00  0x8c  Y   Y   Y   Y   Y    ( adr cnt -- )
key?                    0x00  0x8d  Y   Y   Y   Y   Y    ( -- flag )
key                     0x00  0x8e  Y   Y   Y   Y   Y    ( -- char )
emit                    0x00  0x8f  Y   Y   Y   Y   Y    ( char -- )
type                    0x00  0x90  Y   Y   Y   Y   Y    ( adr +n -- )
(cr                     0x00  0x91  Y   Y   Y   Y   Y    ( -- )
cr                      0x00  0x92  Y   Y   Y   Y   Y    ( -- )
#out                    0x00  0x93  Y   Y   Y   Y   Y    ( -- adr )
#line                   0x00  0x94  Y   Y   Y   Y   Y    ( -- adr )
hold                    0x00  0x95  Y   Y   Y   Y   Y    ( char -- )
<#                      0x00  0x96  Y   Y   Y   Y   Y    ( -- )
#>                      0x00  0x97  Y   Y   Y   Y   Y    ( L -- adr +n )
sign                    0x00  0x98  Y   Y   Y   Y   Y    ( n -- )
#                       0x00  0x99  Y   Y   Y   Y   Y    ( +L1 -- +L2 )
#s                      0x00  0x9a  Y   Y   Y   Y   Y    ( +L -- 0 )
u.                      0x00  0x9b  Y   Y   Y   Y   Y    ( u -- )
u.r                     0x00  0x9c  Y   Y   Y   Y   Y    ( u cnt -- )
.                       0x00  0x9d  Y   Y   Y   Y   Y    ( n -- )
.r                      0x00  0x9e  Y   Y   Y   Y   Y    ( n cnt -- )
.s                      0x00  0x9f  Y   Y   Y   Y   Y    ( -- )
base                    0x00  0xa0  Y   Y   Y   Y   Y    ( -- adr )
$number                 0x00  0xa2  N   Y   Y   Y   Y    ( adr len -- n false | true )
digit                   0x00  0xa3  Y   Y   Y   Y   Y    ( char base -- digit true | char false )
-1                      0x00  0xa4  Y   Y   Y   Y   Y    ( -- -1 )
0                       0x00  0xa5  Y   Y   Y   Y   Y    ( -- 0 )
1                       0x00  0xa6  Y   Y   Y   Y   Y    ( -- 1 )
2                       0x00  0xa7  Y   Y   Y   Y   Y    ( -- 2 )
3                       0x00  0xa8  Y   Y   Y   Y   Y    ( -- 3 )
bl                      0x00  0xa9  Y   Y   Y   Y   Y    ( -- n )
bs                      0x00  0xaa  Y   Y   Y   Y   Y    ( -- n )
bell                    0x00  0xab  Y   Y   Y   Y   Y    ( -- n )
bounds                  0x00  0xac  Y   Y   Y   Y   Y    ( n cnt -- n+cnt n )
here                    0x00  0xad  Y   Y   Y   Y   Y    ( -- adr )
aligned                 0x00  0xae  Y   Y   Y   Y   Y    ( adr1 -- adr2 )
wbsplit                 0x00  0xaf  Y   Y   Y   Y   Y    ( w -- b.lo b.hi )
bwjoin                  0x00  0xb0  Y   Y   Y   Y   Y    ( b.lo b.hi -- w )
b(<mark)                0x00  0xb1  Y   Y   Y   Y   Y   
b(>resolve)             0x00  0xb2  Y   Y   Y   Y   Y   
new-token               0x00  0xb5  Y   Y   Y   Y   Y    \ then table#, code#, token-type
named-token             0x00  0xb6  Y   Y   Y   Y   Y    \ then string, table#, code#, token-type
b(:)                    0x00  0xb7  Y   Y   Y   Y   Y    ( -- )
b(value)                0x00  0xb8  Y   Y   Y   Y   Y    ( -- )
b(variable)             0x00  0xb9  Y   Y   Y   Y   Y    ( -- )
b(constant)             0x00  0xba  Y   Y   Y   Y   Y    ( -- )
b(create)               0x00  0xbb  Y   Y   Y   Y   Y    ( -- )
b(defer)                0x00  0xbc  Y   Y   Y   Y   Y    ( -- )
b(buffer:)              0x00  0xbd  Y   Y   Y   Y   Y    ( -- )
b(field)                0x00  0xbe  Y   Y   Y   Y   Y    ( -- )
instance                0x00  0xc0  N   N   Y   Y   Y    ( -- )
b(;)                    0x00  0xc2  Y   Y   Y   Y   Y    ( -- )
b(is)                   0x00  0xc3  Y   Y   Y   Y   Y    ( acf -- )
b(case)                 0x00  0xc4  Y   Y   Y   Y   Y    ( selector -- selector )
b(endcase)              0x00  0xc5  Y   Y   Y   Y   Y    ( selector -- )
b(endof)                0x00  0xc6  Y   Y   Y   Y   Y    ( -- )
external-token          0x00  0xca  N   Y   Y   Y   Y    ( -- )
$find                   0x00  0xcb  Y   Y   Y   Y   Y    ( adr len -- adr len false  |  acf +-1 )
offset16                0x00  0xcc  Y   Y   Y   Y   Y    \ Sets the offset length to 16 bits
eval                    0x00  0xcd  N   Y   Y   Y   Y    ( adr len -- )
c,                      0x00  0xd0  Y   Y   Y   Y   Y    ( n -- )
w,                      0x00  0xd1  Y   Y   Y   Y   Y    ( n -- )
l,                      0x00  0xd2  Y   Y   Y   Y   Y    ( n -- )
,                       0x00  0xd3  Y   Y   Y   Y   Y    ( n -- )
u*x                     0x00  0xd4  N   Y   Y   Y   Y    ( u1[32] u2[32] -- product[64] )
xu/mod                  0x00  0xd5  N   Y   Y   Y   Y    ( u1[64] u2[32] -- remainder[32] quot[32] )
x+                      0x00  0xd8  N   Y   Y   Y   Y    ( x1 x2 -- x3 )
x-                      0x00  0xd9  N   Y   Y   Y   Y    ( x1 x2 -- x3 )
start0                  0x00  0xf0  N   Y   Y   Y   Y    ( -- )
start1                  0x00  0xf1  N   Y   Y   Y   Y    ( -- )
start2                  0x00  0xf2  N   Y   Y   Y   Y    ( -- )
start4                  0x00  0xf3  N   Y   Y   Y   Y    ( -- )
ferror                  0x00  0xfc  N   N   N   N   Y   
version1                0x00  0xfd  Y   Y   Y   Y   Y    \ then 0byte,chksum(2bytes),length(4bytes)
4-byte-id               0x00  0xfe  Y   N   N   N   N    \ then 3 more bytes
end1                    0x00  0xff  Y   Y   Y   Y   Y   
dma-alloc               0x01  0x01  Y   Y   Y   Y   Y    ( #bytes -- virtual )
my-address              0x01  0x02  Y   Y   Y   Y   Y    ( -- physical )
my-space                0x01  0x03  Y   Y   Y   Y   Y    ( -- space )
memmap                  0x01  0x04  Y   Y   Y   Y   Y    ( physical space size -- virtual )
free-virtual            0x01  0x05  Y   Y   Y   Y   Y    ( virtual len -- )
>physical               0x01  0x06  Y   Y   Y   Y   Y    ( virtual -- physical space )
my-params               0x01  0x0f  Y   Y   Y   Y   Y    ( -- addr len )
attribute               0x01  0x10  Y   Y   Y   Y   Y    ( val-adr val-len name-adr name-len -- )
xdrint                  0x01  0x11  Y   Y   Y   Y   Y    ( n1 -- adr len )
xdr+                    0x01  0x12  Y   Y   Y   Y   Y    ( adr len1 adr len2-- adr len1+2 )
xdrphys                 0x01  0x13  Y   Y   Y   Y   Y    ( paddr space -- adr len )
xdrstring               0x01  0x14  Y   Y   Y   Y   Y    ( adr len -- adr' len+1 )
xdrbytes                0x01  0x15  N   N   Y   Y   Y    ( adr len -- adr' len+1 )
reg                     0x01  0x16  Y   Y   Y   Y   Y    ( physical space size -- )
intr                    0x01  0x17  Y   Y   Y   Y   Y    ( int-level vector -- )
driver                  0x01  0x18  Y   N   N   N   N    ( adr len -- )
model                   0x01  0x19  Y   Y   Y   Y   Y    ( adr len -- )
device-type             0x01  0x1a  Y   Y   Y   Y   Y    ( adr len -- )
decode-2int             0x01  0x1b  N   Y   Y   Y   Y    ( adr len -- address space )
is-install              0x01  0x1c  Y   Y   Y   Y   Y    ( acf -- )
is-remove               0x01  0x1d  Y   Y   Y   Y   Y    ( acf -- )
is-selftest             0x01  0x1e  Y   Y   Y   Y   Y    ( acf -- )
new-device              0x01  0x1f  Y   Y   Y   Y   Y    ( -- )
diagnostic-mode?        0x01  0x20  Y   Y   Y   Y   Y    ( -- flag )
display-status          0x01  0x21  Y   Y   Y   Y   Y    ( n -- )
memory-test-suite       0x01  0x22  Y   Y   Y   Y   Y    ( adr len -- status )
group-code              0x01  0x23  Y   Y   Y   Y   Y    ( -- adr )
mask                    0x01  0x24  Y   Y   Y   Y   Y    ( -- adr )
get-msecs               0x01  0x25  Y   Y   Y   Y   Y    ( -- ms )
ms                      0x01  0x26  Y   Y   Y   Y   Y    ( n -- )
finish-device           0x01  0x27  Y   Y   Y   Y   Y    ( -- )
map-sbus                0x01  0x30  Y   Y   Y   Y   Y    ( phys size -- virt )
sbus-intr>cpu           0x01  0x31  Y   Y   Y   Y   Y    ( sbus-intr# -- cpu-intr# )
#lines                  0x01  0x50  Y   Y   Y   Y   Y    ( -- n )
#columns                0x01  0x51  Y   Y   Y   Y   Y    ( -- n )
line#                   0x01  0x52  Y   Y   Y   Y   Y    ( -- n )
column#                 0x01  0x53  Y   Y   Y   Y   Y    ( -- n )
inverse?                0x01  0x54  Y   Y   Y   Y   Y    ( -- flag )
inverse-screen?         0x01  0x55  Y   Y   Y   Y   Y    ( -- flag )
draw-character          0x01  0x57  Y   Y   Y   Y   Y    ( char -- )
reset-screen            0x01  0x58  Y   Y   Y   Y   Y    ( -- )
toggle-cursor           0x01  0x59  Y   Y   Y   Y   Y    ( -- )
erase-screen            0x01  0x5a  Y   Y   Y   Y   Y    ( -- )
blink-screen            0x01  0x5b  Y   Y   Y   Y   Y    ( -- )
invert-screen           0x01  0x5c  Y   Y   Y   Y   Y    ( -- )
insert-characters       0x01  0x5d  Y   Y   Y   Y   Y    ( n -- )
delete-characters       0x01  0x5e  Y   Y   Y   Y   Y    ( n -- )
insert-lines            0x01  0x5f  Y   Y   Y   Y   Y    ( n -- )
delete-lines            0x01  0x60  Y   Y   Y   Y   Y    ( n -- )
draw-logo               0x01  0x61  Y   Y   Y   Y   Y    ( line# laddr lwidth lheight -- )
frame-buffer-adr        0x01  0x62  Y   Y   Y   Y   Y    ( -- addr )
screen-height           0x01  0x63  Y   Y   Y   Y   Y    ( -- n )
screen-width            0x01  0x64  Y   Y   Y   Y   Y    ( -- n )
window-top              0x01  0x65  Y   Y   Y   Y   Y    ( -- n )
window-left             0x01  0x66  Y   Y   Y   Y   Y    ( -- n )
default-font            0x01  0x6a  Y   Y   Y   Y   Y    ( -- fntbase chrwidth chrheight fntbytes #1stchr #chrs )
set-font                0x01  0x6b  Y   Y   Y   Y   Y    (    fntbase chrwidth chrheight fntbytes #1stchr #chrs -- )
char-height             0x01  0x6c  Y   Y   Y   Y   Y    ( -- n )
char-width              0x01  0x6d  Y   Y   Y   Y   Y    ( -- n )
>font                   0x01  0x6e  Y   Y   Y   Y   Y    ( char -- adr )
fontbytes               0x01  0x6f  Y   Y   Y   Y   Y    ( -- n )
fb1-draw-character      0x01  0x70  Y   Y   Y   Y   Y    ( char -- )
fb1-reset-screen        0x01  0x71  Y   Y   Y   Y   Y    ( -- )
fb1-toggle-cursor       0x01  0x72  Y   Y   Y   Y   Y    ( -- )
fb1-erase-screen        0x01  0x73  Y   Y   Y   Y   Y    ( -- )
fb1-blink-screen        0x01  0x74  Y   Y   Y   Y   Y    ( -- )
fb1-invert-screen       0x01  0x75  Y   Y   Y   Y   Y    ( -- )
fb1-insert-characters   0x01  0x76  Y   Y   Y   Y   Y    ( #chars -- )
fb1-delete-characters   0x01  0x77  Y   Y   Y   Y   Y    ( #chars -- )
fb1-insert-lines        0x01  0x78  Y   Y   Y   Y   Y    ( #lines -- )
fb1-delete-lines        0x01  0x79  Y   Y   Y   Y   Y    ( #lines -- )
fb1-draw-logo           0x01  0x7a  Y   Y   Y   Y   Y    ( line# logoadr lwidth lheight -- )
fb1-install             0x01  0x7b  Y   Y   Y   Y   Y    ( width height #cols #lines -- )
fb1-slide-up            0x01  0x7c  Y   Y   Y   Y   Y    ( #lines -- )
fb8-draw-character      0x01  0x80  Y   Y   Y   Y   Y    ( char -- )
fb8-reset-screen        0x01  0x81  Y   Y   Y   Y   Y    ( -- )
fb8-toggle-cursor       0x01  0x82  Y   Y   Y   Y   Y    ( -- )
fb8-erase-screen        0x01  0x83  Y   Y   Y   Y   Y    ( -- )
fb8-blink-screen        0x01  0x84  Y   Y   Y   Y   Y    ( -- )
fb8-invert-screen       0x01  0x85  Y   Y   Y   Y   Y    ( -- )
fb8-insert-characters   0x01  0x86  Y   Y   Y   Y   Y    ( #chars -- )
fb8-delete-characters   0x01  0x87  Y   Y   Y   Y   Y    ( #chars -- )
fb8-insert-lines        0x01  0x88  Y   Y   Y   Y   Y    ( #lines -- )
fb8-delete-lines        0x01  0x89  Y   Y   Y   Y   Y    ( #lines -- )
fb8-draw-logo           0x01  0x8a  Y   Y   Y   Y   Y    ( line# ladr lwidth lheight -- )
fb8-install             0x01  0x8b  Y   Y   Y   Y   Y    ( width height #cols #lines -- )
vmed16a16               0x01  0x90  Y   Y   Y   Y   Y    ( -- n )
vmed16a24               0x01  0x91  Y   Y   Y   Y   Y    ( -- n )
vmed16a32               0x01  0x92  Y   Y   Y   Y   Y    ( -- n )
vmed32a16               0x01  0x93  Y   Y   Y   Y   Y    ( -- n )
vmed32a24               0x01  0x94  Y   Y   Y   Y   Y    ( -- n )
vmed32a32               0x01  0x95  Y   Y   Y   Y   Y    ( -- n )
vmebus-intr>cpu         0x01  0x96  Y   Y   Y   Y   Y    ( vmebus-intr# -- cpu-intr# )
xmit-packet             0x01  0xa1  Y   N   N   N   N    ( bufadr #bytes -- #sent )
poll-packet             0x01  0xa2  Y   N   N   N   N    ( bufadr #bytes -- #received )
mac-address             0x01  0xa4  Y   Y   Y   Y   Y    ( -- adr len )
device-name             0x02  0x01  N   Y   Y   Y   Y    ( addr len -- )
my-args                 0x02  0x02  N   Y   Y   Y   Y    ( -- addr len )
my-self                 0x02  0x03  N   Y   Y   Y   Y    ( -- ihandle )
find-package            0x02  0x04  N   Y   Y   Y   Y    ( adr len -- [phandle] ok? )
open-package            0x02  0x05  N   Y   Y   Y   Y    ( adr len phandle -- ihandle | 0 )
close-package           0x02  0x06  N   Y   Y   Y   Y    ( ihandle -- )
find-method             0x02  0x07  N   Y   Y   Y   Y    ( adr len phandle -- [acf] ok? )
call-package            0x02  0x08  N   Y   Y   Y   Y    ( acf ihandle -- )
$call-parent            0x02  0x09  N   Y   Y   Y   Y    ( adr len -- )
my-parent               0x02  0x0a  N   Y   Y   Y   Y    ( -- ihandle )
ihandle>phandle         0x02  0x0b  N   Y   Y   Y   Y    ( ihandle -- phandle )
my-unit                 0x02  0x0d  N   Y   Y   Y   Y    ( -- offset space )
$call-method            0x02  0x0e  N   Y   Y   Y   Y    ( adr len ihandle -- )
$open-package           0x02  0x0f  N   Y   Y   Y   Y    ( arg-adr,len name-adr,len -- ihandle | 0 )
processor-type          0x02  0x10  N   Y   Y   Y   Y    ( -- processor-type )
firmware-version        0x02  0x11  N   Y   Y   Y   Y    ( -- n )
fcode-version           0x02  0x12  N   Y   Y   Y   Y    ( -- n )
alarm                   0x02  0x13  N   Y   Y   Y   Y    ( acf n -- )
(is-user-word)          0x02  0x14  N   Y   Y   Y   Y    ( adr len acf -- )
suspend-fcode           0x02  0x15  N   Y   Y   Y   Y    ( -- )
abort                   0x02  0x16  N   Y   Y   Y   Y    ( -- )
catch                   0x02  0x17  N   Y   Y   Y   Y    ( acf -- error-code )
throw                   0x02  0x18  N   Y   Y   Y   Y    ( error-code -- )
user-abort              0x02  0x19  N   N   Y   Y   Y    ( -- )
get-my-attribute        0x02  0x1a  N   Y   Y   Y   Y    ( nam-adr nam-len -- [val-adr val-len] failed? )
xdrtoint                0x02  0x1b  N   Y   Y   Y   Y    ( val-adr val-len -- n )
xdrtostring             0x02  0x1c  N   Y   Y   Y   Y    ( val-adr val-len -- adr len )
get-inherited-attribute 0x02  0x1d  N   Y   Y   Y   Y    ( nam-adr nam-len -- [val-adr val-len] failed? )
delete-attribute        0x02  0x1e  N   Y   Y   Y   Y    ( nam-adr nam-len -- )
get-package-attribute   0x02  0x1f  N   Y   Y   Y   Y    ( adr len phandle -- [val-adr val-len] failed? )
cpeek                   0x02  0x20  N   Y   Y   Y   Y    ( adr -- { byte true } | false )
wpeek                   0x02  0x21  N   Y   Y   Y   Y    ( adr -- { word true } | false )
lpeek                   0x02  0x22  N   Y   Y   Y   Y    ( adr -- { long true } | false )
cpoke                   0x02  0x23  N   Y   Y   Y   Y    ( byte adr -- ok? )
wpoke                   0x02  0x24  N   Y   Y   Y   Y    ( word adr -- ok? )
lpoke                   0x02  0x25  N   Y   Y   Y   Y    ( long adr -- ok? )
rb@                     0x02  0x30  N   Y   Y   Y   Y    (      adr -- byte )
rb!                     0x02  0x31  N   Y   Y   Y   Y    ( byte adr -- )
rw@                     0x02  0x32  N   Y   Y   Y   Y    (      adr -- word )
rw!                     0x02  0x33  N   Y   Y   Y   Y    ( word adr -- )
rl@                     0x02  0x34  N   Y   Y   Y   Y    (      adr -- long )
rl!                     0x02  0x35  N   Y   Y   Y   Y    ( long adr -- )
wflips                  0x02  0x36  N   Y   Y   Y   Y    ( adr len -- )
lflips                  0x02  0x37  N   Y   Y   Y   Y    ( adr len -- )
probe                   0x02  0x38  N   N   N   Y   Y    ( arg-str reg-str fcode-str -- )
probe-virtual           0x02  0x39  N   N   N   Y   Y    ( arg-str reg-str fcode-adr -- )
child                   0x02  0x3b  N   N   N   N   Y    ( phandle -- phandle' )
peer                    0x02  0x3c  N   N   N   N   Y    ( phandle -- phandle' )
left-parse-string       0x02  0x40  N   Y   Y   Y   Y    ( adr len char -- adrR lenR adrL lenL )
