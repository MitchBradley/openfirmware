Image files - audio and graphics

Audio:

olpc16.wav is a startup sound by Barry Vercoe, 16K samples/sec.

olpc16EQ.wav is the sound with some equalization to partially compensate
  for OLPC speaker deficiencies.

olpc16EQima.wav is olpc16EQ.wav encoded with IMA ADPCM to save space:

  sox  olpc16EQ.wav  -i olpc16EQima.wav

Barry also provided 24K and 32K samples/sec versions of the sound, but
the difference is inaudible, especially on OLPC speakers, so I chose
the 16K version to save space in ROM.

Graphics / Icons:

The boot progress icons were created by Eben Eliason to match the
style of the OLPC logo.

The .565 image format is a very simple format for 16-bit RGB 565 image data.
The reason I invented this new format is because I couldn't find an
existing standard format that handles 565 representation.  There is
something for the iPod, I think, but I couldn't find any tools to
process it.

The file has an 8-byte header and then the data.

Header:
"C565"  - 4 bytes
width   - 2 bytes, little endian
height  - 2 bytes, little endian

Then 2 * width * height bytes of data.
Each pixel is 2 bytes, little endian, in RGB565 format.
Each line is width pixels.

ofw/gui/bmp24rgb565.fth is a program to convert 24-bit RGB .bmp files to this format.

   forth ofw/gui/bmp24rgb565.fth -s "bmp24rgb565  foo.bmp  foo.565"

Some of the files are checked in ".di" format, thus saving space in both the
repository and the source tree, and reducing download time.

The recipe for creating a ".di" file is, for example:

  % build
  ok writing big-x.di
  ok " big-x.565" " big-x.565" $add-deflated-dropin
  ok ofd @ fclose
  ok bye
