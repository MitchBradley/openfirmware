purpose: Construct the Open Firmware module collection

command: &builder &this
in: ${BP}/cpu/x86/pc/olpc/build/ec.img
\ in: ${BP}/cpu/x86/pc/olpc/build/vsa.bin
in: ${BP}/cpu/x86/pc/olpc/build/romreset.di
in: ${BP}/cpu/x86/pc/olpc/build/romstart.di
in: ${BP}/cpu/x86/pc/olpc/build/rmstart.img
in: ${BP}/cpu/x86/pc/olpc/build/fw.dic
in: ${BP}/dev/geode/nandflash/build/nandflash.fc
in: ${BP}/dev/usb2/hcd/ohci/build/ohci.fc
in: ${BP}/dev/usb2/hcd/ehci/build/ehci.fc
in: ${BP}/dev/usb2/device/hub/build/hub.fc
in: ${BP}/dev/usb2/device/net/build/usbnet.fc
in: ${BP}/dev/usb2/device/serial/build/usbserial.fc
in: ${BP}/dev/usb2/device/storage/build/usbstorage.fc
in: ${BP}/dev/usb2/device/keyboard/build/usbkbd.fc
in: ${BP}/dev/pci/build/pcibridg.fc
in: ${BP}/dev/olpc/cafenand/build/cafenand.fc

build-now

fload ${BP}/cpu/x86/pc/olpc/config.fth

\ Always re-create the builton.fth file when we make a new rom.img
fload ${BP}/cpu/x86/pc/builton.bth

hex

: pad-file  ( location -- )
   ofd @ fsize
   2dup u< abort" The ROM image is too large"
   ?do  h# ff ofd @ fputc  loop
;

.( --- Saving as olpc.rom - Direct ROM format) cr
writing olpc.rom
   " ec.img"                $add-file
   h# 1.0000 pad-file

   " olpc_vsa.64k.bin"      $add-file
   h# 2.0000 pad-file

   dropin-base rom-pa -  pad-file

   " romreset.di"           $add-file
   " romstart.di"           $add-file

   fload ${BP}/cpu/x86/pc/olpc/loaddropins.fth

   /rom h# 400 - pad-file	\ rmstart image must start 0x400 from end
   " rmstart.img"    $add-file

ofd @ fclose
