purpose: Construct the final BIOS-start OFW image 

command: &builder &this
in: biostart.img
in: reset.di
in: start.di
in: ${BP}/cpu/x86/pc/biosload/build/paging.di
in: fw.img
in: ${BP}/dev/usb2/hcd/ohci/build/ohci.fc
in: ${BP}/dev/usb2/hcd/uhci/build/uhci.fc
in: ${BP}/dev/usb2/hcd/ehci/build/ehci.fc
in: ${BP}/dev/usb2/device/hub/build/hub.fc
in: ${BP}/dev/usb2/device/net/build/usbnet.fc
in: ${BP}/dev/usb2/device/serial/build/usbserial.fc
in: ${BP}/dev/usb2/device/storage/build/usbstorage.fc
in: ${BP}/dev/usb2/device/keyboard/build/usbkbd.fc
\ in: ${BP}/ofw/fs/nfs/build/nfs.di
\ in: ${BP}/ofw/fs/cdfs/build/cdfs.di
\ in: ${BP}/ofw/fs/fatfs/build/fatfs.di
\ in: ${BP}/ofw/disklabel/build/disklabel.di
\ in: ${BP}/ofw/inet/build/obptftp.di
in: ${BP}/dev/pci/build/pcibridg.fc
in: ${BP}/dev/ide/build/leghier.fc
in: ${BP}/cpu/x86/pc/biosload/linux.fth
in: ${BP}/dev/mmc/sdhci/build/sdhci2.fc
in: ${BP}/dev/mmc/sdhci/build/sdmmc.fc
in: ${BP}/dev/mmc/sdhci/mv8686/build/mv8686.fc
in: sd8686.bin

build-now

fload ${BP}/cpu/x86/pc/biosload/config.fth

\ Always re-create the builton.fth file when we make a new rom.img
fload ${BP}/cpu/x86/pc/builton.bth

hex

[ifdef] virtualbox-loaded
writing floppyofw.img
[then]

[ifdef] grub-loaded
  fload ${BP}/cpu/x86/pc/elfhdr.fth
    .( --- Saving as ofwgrub.elf - GRUB multiboot format) cr
    writing ofwgrub.elf
  elf-header /elf-header  ofd @ fputs
[then]

[ifdef] coreboot-loaded
  .( --- Saving as ofwlb.elf - Coreboot payload format) cr
  fload ${BP}/cpu/x86/pc/elfhdr.fth
  writing ofwlb.elf
  [ifdef] coreboot-qemu
    elf-header /elf-header ofd @ fputs
  [else]
    elf-header /elf-header  0  " elf-header"  write-dropin
  [then]
[then]

[ifdef] syslinux-loaded
  .( --- Saving as ofw.c32 - Syslinux COM32 format) cr
  fload ${BP}/cpu/x86/pc/c32hdr.fth
  writing ofw.c32
    c32-hdr  /c32-hdr      ofd @ fputs
[then]

[ifdef] bzimage-loaded
  \ - Linux kernel format - USB Key w/ FAT FS - Coreboot w/ stripped Linux payload
  .( --- Saving as ofw.bzi - Linux kernel format) cr
  fload ${BP}/cpu/x86/pc/bzhdr.fth
  writing ofw.bzi
    bz-hdr /bz-hdr  0  " bz-header"  write-dropin
[then]

[ifdef] preof-loaded
  : pad-file  ( location -- )
     ofd @ fsize
     2dup u< abort" The ROM image is too large"
     ?do  h# ff ofd @ fputc  loop
  ;

  .( --- Saving as ofw.rom - Binary ROM image format for preOF) cr
  fload ${BP}/cpu/x86/pc/biosload/preofhdr.fth
  writing ofw.rom
    preof-hdr  /preof-hdr      ofd @ fputs
[then]

[ifdef] real-mode-entry
   " biostart.img"          $add-file
[then]
   " reset.di"              $add-file
   " start.di"              $add-file
   " paging.di"             $add-file
   " ${BP}/cpu/x86/build/inflate.bin"           " inflate"         $add-dropin
   " fw.img"                                    " firmware"        $add-deflated-dropin
   " ${BP}/dev/pci/build/pcibridg.fc"           " class060400"     $add-deflated-dropin
   " ${BP}/dev/ide/build/leghier.fc"            " class01018a"     $add-deflated-dropin

[ifdef] via-demo
   " ${BP}/dev/mmc/sdhci/build/sdhci2.fc"       " class080501"     $add-deflated-dropin
   " ${BP}/dev/mmc/sdhci/build/sdmmc.fc"        " sdmmc"           $add-deflated-dropin
   " ${BP}/dev/mmc/sdhci/mv8686/build/mv8686.fc" " mv8686"         $add-deflated-dropin
   " sd8686_helper.bin"                         " helper_sd.bin"   $add-deflated-dropin
   " sd8686.bin"                                " sd8686.bin"      $add-deflated-dropin

   " ../../olpc/via/build/memtest"              " memtest"       $add-deflated-dropin
[else]
   " ${BP}/dev/mmc/sdhci/build/sdhci.fc"        " class080501"     $add-deflated-dropin
   " ${BP}/dev/mmc/sdhci/build/sdmmc.fc"        " sdmmc"           $add-deflated-dropin
[then]

   " ${BP}/dev/usb2/hcd/ehci/build/ehci.fc"	" class0c0320"     $add-deflated-dropin

   " ${BP}/dev/usb2/hcd/uhci/build/uhci.fc"	" class0c0300"     $add-deflated-dropin
   " ${BP}/dev/usb2/hcd/ohci/build/ohci.fc"	" class0c0310"     $add-deflated-dropin
   " ${BP}/dev/usb2/hcd/ehci/build/ehci.fc"	" class0c0320"     $add-deflated-dropin

   " ${BP}/dev/usb2/device/hub/build/hub.fc"            " usb,class9"    $add-dropin
   " ${BP}/dev/usb2/device/keyboard/build/usbkbd.fc"    " usb,class3,1"  $add-dropin
   " ${BP}/dev/usb2/device/net/build/usbnet.fc"         " usbnet"      $add-deflated-dropin
   " ${BP}/dev/usb2/device/serial/build/usbserial.fc"   " usbserial"   $add-deflated-dropin
   " ${BP}/dev/usb2/device/storage/build/usbstorage.fc" " usbstorage"  $add-deflated-dropin
[ifdef] olpc
   " ${BP}/dev/usb2/device/wlan/build/usb8388.fc"  " usb1286,2001"   $add-deflated-dropin
   " ../../olpc/build/usb8388.bin"                 " usb8388.bin"    $add-deflated-dropin
[then]

   " builton.fth"                       " probe-"          $add-dropin
[ifndef] resident-packages
   " ${BP}/ofw/fs/cdfs/build/cdfs.di"                      $add-file
   " ${BP}/ofw/fs/fatfs/build/fatfs.di"                    $add-file
   " ${BP}/ofw/fs/nfs/build/nfs.di"                        $add-file
   " ${BP}/ofw/fs/dropinfs.fth"    " dropin-file-system"   $add-deflated-dropin
   " ${BP}/ofw/disklabel/build/disklabel.di"               $add-file
   " ${BP}/ofw/inet/build/obptftp.di"                      $add-file
   " ${BP}/dev/16550pkg/16550.fth" " 16550"                $add-deflated-dropin
   " ${BP}/cpu/x86/disassem.fth"   " disassem.fth"         $add-deflated-dropin
   " ${BP}/ofw/ppp/build/ppp.di"                           $add-file
\  " ${BP}/ofw/fs/ufs/ufs.fth"     " ufs-file-system"      $add-deflated-dropin
   " ${BP}/ofw/fs/zipfs.fth"       " zip-file-system"      $add-deflated-dropin
   " ${BP}/ofw/inet/tcp.fth"       " tcp"                  $add-deflated-dropin
   " ${BP}/ofw/inet/http.fth"      " http"                 $add-deflated-dropin
   " ${BP}/ofw/fs/ext2fs/ext2fs.fth"  " ext2-file-system"  $add-deflated-dropin
   " ${BP}/ofw/inet/telnetd.fth"      " telnetd"           $add-deflated-dropin
   " ${BP}/ofw/fs/fatfs/fdisk2.fth"   " fdisk2.fth"        $add-deflated-dropin
[then]
   " ${BP}/ofw/fcode/memtest.fth"  " memtest.fth"          $add-deflated-dropin

   " ${BP}/ofw/inet/telnetd.fth"          " telnetd"             $add-deflated-dropin

   " ${BP}/ofw/inet/httpdemo/index.htm"	   " index.htm"    $add-dropin
   " ${BP}/ofw/inet/httpdemo/config.htm"   " config.htm"   $add-dropin
\  " ${BP}/ofw/inet/httpdemo/post.htm"     " post.htm"     $add-dropin
   " ${BP}/ofw/inet/httpdemo/free.htm"	   " free.htm"     $add-dropin
   " ${BP}/ofw/inet/httpdemo/homelogo.gif" " homelogo.gif" $add-dropin

   " ${BP}/cpu/x86/pc/biosload/linux.fth"     " linux.fth"    $add-dropin
   " ${BP}/ofw/linux/penguin.txt"  " penguin.txt"          $add-dropin

[ifdef] use-vga
   " ${BP}/ofw/termemu/cp881-16.obf"            " font"        $add-deflated-dropin
[then]
[ifdef] use-vesa
   " ${BP}/ofw/termemu/cp881-16.obf"            " font"        $add-deflated-dropin
[then]

[ifdef] grub-loaded
   ofd @ fsize h# 60 -  pad !      \ file size; store in memory for convenience below
   h# 44 ofd @ fseek        \ Seek to file size field; see elfhdr.bth
   pad 4 ofd @ fputs        \ Patch file size
   pad 4 ofd @ fputs        \ Patch memory size
[then]

[ifdef] coreboot-qemu
   ofd @ fsize pad !        \ file size; store in memory for convenience below
   h# 44 ofd @ fseek        \ Seek to file size field; see elfhdr.bth
   pad 4 ofd @ fputs        \ Patch file size
   pad 4 ofd @ fputs        \ Patch memory size
[then]

[ifdef] preof-loaded
   h# 60000 pad-file
   " preof.img"  $add-file
   ofd @ fsize  dropin-size <>  if  ." Size is wrong" cr  then
[then]

ofd @ fclose
