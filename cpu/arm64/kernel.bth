purpose: Load file for ARM64 Forth kernel
\ See license at end of file

command: &builder &this
build-now

' noop is include-hook
' noop is include-exit-hook
\ ' $report-name is include-hook
\ ' $report-name+ is include-hook  \ Get source file name + stack dump

\ create itc     \ uncomment to use indirect threaded code (work in progress)

warning off     \ Turn OFF the warning messages

\ The assembler is implemented differently for 32bit host
/n 4 = [if]  create 32bit-host  [then]

\ Either set an environment variable, e.g. "export redeferr=1", or
\ use "make redeferr=1" to enable this feature.
" redeferr" $getenv ( redef$ 0  |  -1 )  0=  if
   drop c@ ascii 1 =  if
      " create recreate-abort-t" evaluate
   then
then

\ create trace-next

\ create undefined-compile-fail-gracefully

\ Configure for relative branch targets.  Absolute branch targets
\ do not work correctly with FCode because of the way that FCode
\ backward branch resolution works.
: \rel  ( -- ) ;                immediate
: \abs  ( -- )  [compile] \ ;   immediate

alias constant-h constant

[ifdef] itc
fload ${BP}/forth/kernel/conf64t32i.fth     \ ITC indirect threaded code
[else]
fload ${BP}/forth/kernel/conf64t32.fth      \ DTC direct threaded code
[then]

fload ${BP}/forth/kernel/meta1.fth

[ifndef] arm64-assembler                \ Make sure we have the ARM64 assembler
only forth also definitions

fload ${BP}/cpu/arm64/utils.fth

\ use new assembler
fload ${BP}/cpu/arm64/asm/load.fth
\ fload ${BP}/cpu/arm64/asm/code.fth
fload ${BP}/cpu/arm64/disassem.fth

also disassembler
true is use-symbolic-reg-names
previous

also assembler
\ true is dis-asm-en
previous

[then]

only forth also meta definitions

fload ${BP}/forth/kernel/metanswapmap.fth       \ Null swap map
fload ${BP}/cpu/arm64/target.fth
fload ${BP}/forth/kernel/forward.fth
fload ${BP}/cpu/arm64/fixvoc.fth
fload ${BP}/forth/kernel/metacompile.fth

\ also meta show? on previous

only forth also definitions decimal

warning on
fload ${BP}/cpu/arm64/metainit.fth

" kernel.tag" r/w create-file drop  meta-tag-file !

always-headers

\ Comment out the following line(s) when debugging
\ -1  threshold  !      \ Turn OFF ALL debugging messages
\ warning-t  off        \ Turn OFF target warning messages

\ Uncomment the following line(s) for more debug output
\ show? on  1 granularity !  1 threshold !
\ warning-t on

fload ${BP}/cpu/arm64/kerncode.fth
fload ${BP}/cpu/arm64/extra.fth

fload ${BP}/forth/kernel/uservars.fth

fload ${BP}/cpu/arm64/sqroot.fth
fload ${BP}/cpu/arm64/dodoesad.fth
fload ${BP}/cpu/arm64/version.fth

fload ${BP}/cpu/arm64/muldiv.fth
fload ${BP}/forth/kernel/double.fth  \ ???
fload ${BP}/forth/kernel/scan.fth

fload ${BP}/cpu/arm64/bitops.fth

fload ${BP}/forth/lib/struct.fth
fload ${BP}/forth/kernel/nswapmap.fth   \ Null swap map
: clear-relocation-bits   2drop  ;

fload ${BP}/forth/kernel/kernel.fth

fload ${BP}/forth/kernel/sysio.fth
fload ${BP}/forth/lib/dumballo.fth
fload ${BP}/cpu/arm64/sys.fth

fload ${BP}/cpu/arm64/filecode.fth
fload ${BP}/cpu/arm64/boot.fth

[ifdef] itc  \ in metacompiler
create itc   \ for later
[then]

\ fload ${BP}/cpu/arm64/mmu.fth

\ Now that everything is defined, we can set the values of the
\ user variables which are shadowed in the metacompiler.
#user-t @ is #user
voc-link-t l@  is voc-link
here-t is fence

fload ${BP}/cpu/arm64/finish.fth
fload ${BP}/cpu/arm64/savemeta.fth

\Tags close-tag-file
\NotTags .( --- Saving )  " kernel.dic"  type .(  ---)
" kernel.dic" $save-meta cr

\ LICENSE_BEGIN
\ Copyright (c) 2008 FirmWorks
\ Copyright (c) 2011 Apple, Inc.
\
\ Permission is hereby granted, free of charge, to any person obtaining
\ a copy of this software and associated documentation files (the
\ "Software"), to deal in the Software without restriction, including
\ without limitation the rights to use, copy, modify, merge, publish,
\ distribute, sublicense, and/or sell copies of the Software, and to
\ permit persons to whom the Software is furnished to do so, subject to
\ the following conditions:
\
\ The above copyright notice and this permission notice shall be
\ included in all copies or substantial portions of the Software.
\
\ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
\ EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
\ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
\ NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
\ LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
\ OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
\ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
\
\ LICENSE_END
