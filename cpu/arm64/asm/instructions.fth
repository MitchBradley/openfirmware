\ Assembler Instruction Mnemonics
\ ARMv8.0
\ this file defines the simpler instructions, about 343 of them
\ some were merged into instructions-mix.fth
\ all of these have no stack effect    ( -- )

: adc         0x1a00.0000 m.wx  %dp2  ;
: adcs        0x3a00.0000 m.wx  %dp2  ;
: addhn       0x0E20.4000 m.v#bhs  %v3narrow  ;
: addhn2      0x4E20.4000 m.v#bhs  %v3narrow  ;
: addv        0x0E31.B800 m.bhs  %across  ;
: adrp        0x9000.0000 m.wx  %adr-imm  ;   \ but some code needs to be fixed
: asrv        0x1ac0.2800 m.wx %dp2  ;
: at          <asm  at-parse  ,xreg  system  asm>  ;
: b           0x14000000 %uncond-br-imm  ;
: bif         0x2EE0.1C00 m.v#b  %bv3same  ;
: bit         0x2EA0.1C00 m.v#b  %bv3same  ;
: bl          0x94000000 %uncond-br-imm  ;
: blr         0xd63f.0000 m.x  %rn  ;
: br          0xd61f.0000 m.x  %rn  ;
: brk         0xd420.0000 %exception  ;
: cbnz        0x35000000 m.wx  %cmp-br-imm  ;
: cbz         0x34000000 m.wx  %cmp-br-imm  ;
: ccmn        0x3a400000  %cond-compare  ;
: ccmp        0x7a400000  %cond-compare  ;
: cinc        0x1a80.0400 m.wx  %cond-select1  ;
: cinv        0x5a80.0000 m.wx  %cond-select1  ;
: clrex       <asm  0xd503.305f  #clrex  ^sys  asm>  ;
: cmhi        0x2E20.3400 m.v#bhsd  0x7E20.3400 m.d   %3same-nv  ;
: cmhs        0x2E20.3C00 m.v#bhsd  0x7E20.3C00 m.d   %3same-nv  ;
: cmle        0x2e20.9800 m.v#bhsd  0x7ee0.9800 m.d   %2same-nvz  ;
: cmlt        0x0e20.a800 m.v#bhsd  0x5ee0.a800 m.d   %2same-nvz  ;
: cmtst       0x0E20.8C00 m.v#bhsd  0x5E20.8C00 m.d   %3same-nv  ;
: cneg        0x5a80.0400 m.wx  %cond-select1  ;
: crc32b      0x1ac0.4000 m.w  %dp2  ;
: crc32cb     0x1ac0.5000 m.w  %dp2  ;
: crc32ch     0x1ac0.5400 m.w  %dp2  ;
: crc32cw     0x1ac0.5800 m.w  %dp2  ;
: crc32cx     0x9ac0.5C00 m.w  %dp1  ;
: crc32h      0x1ac0.4400 m.w  %dp2  ;
: crc32w      0x1ac0.4800 m.w  %dp2  ;
: crc32x      0x9ac0.4C00 m.w  %dp1  ;
: csel        0x1a80.0000 m.wx  %cond-select0  ;
: cset        0x1a9f.07e0 m.wx  %cond-select2  ;
: csetm       0x5a9f.03e0 m.wx  %cond-select2  ;
: csinc       0x1a80.0400 m.wx  %cond-select0  ;
: csinv       0x5a80.0000 m.wx  %cond-select0  ;
: csneg       0x5a80.0400 m.wx  %cond-select0  ;
: dc          <asm  dc-parse  ,xreg  system  asm>  ;
: dcps1       0xd4a0.0001 %exception?  ;
: dcps2       0xd4a0.0002 %exception?  ;
: dcps3       0xd4a0.0003 %exception?  ;
: dmb         <asm  0xd503.30bf  dbarrier  ^sys  asm>  ;
: drps        0xd6bf.03e0  %op  ;
: dsb         <asm  0xd503.309f  dbarrier  ^sys  asm>  ;
: eon         <asm  2  1  wxd, wxn, log-reg asm>  ;
: eret        0xd69f.03e0  %op  ;
: ext         <asm  d=n=m,  m.v#b rd??  set-q  #uimm4 11 4 ^^op  0x2E00.0000 iop  asm>  ;
: extr        <asm  d=n=m,  m.wx rd??  ^extr  asm>  ;
: facge       0x2E20.EC00 m.v#sd  0x7E20.EC00 m.sd  %f3same-nv  ;
: facgt       0x2EA0.EC00 m.v#sd  0x7EA0.EC00 m.sd  %f3same-nv  ;
: fccmp       0x1E20.0400 m.sd  %fcond-cmp  ;
: fccmpe      0x1E20.0410 m.sd  %fcond-cmp  ;
: fcmle       0x2ea0.d800 m.v#sd  0x7ea0.d800 m.sd  %f2same-nvz  ;
: fcmlt       0x0ea0.e800 m.v#sd  0x5ea0.e800 m.sd  %f2same-nvz  ;
: fcsel       0x1E20.0C00 m.sd   %fcond-sel  ;
: fcvtl       0x0E21.7800 m.v#sd  %fs2long  ;   \ fcvtl  v0.2d,v1.2s
: fcvtl2      0x4E21.7800 m.v#sd  %fs2long  ;   \ fcvtl2 v0.2d,v1.4s
: fcvtn       0x0E21.6800 m.v#hs  %fs2narrow  ;
: fcvtn2      0x4E21.6800 m.v#hs  %fs2narrow  ;
: fmadd       0x1f00.0000 m.sd  %fs4same  ;
: fmsub       0x1f00.8000 m.sd  %fs4same  ;
: fnmadd      0x1f20.0000 m.sd  %fs4same  ;
: fnmsub      0x1f20.8000 m.sd  %fs4same  ;
: fnmul       0x1e20.8800 m.sd  %fs3same ;
: hint        0xd503.201f %hint  ;
: hlt         0xd440.0000 %exception  ;
: hvc         0xd400.0002 %exception  ;
: ic          <asm  ic-parse  ,xreg?  system  asm>  ;
: isb         <asm  0xd503.30df  ibarrier  ^sys  asm>  ;
: ld1r        0x0D40.C000  1 %ld-r  ;
: ld2r        0x0D60.C000  2 %ld-r  ;
: ld3r        0x0D40.E000  3 %ld-r  ;
: ld4r        0x0D60.E000  4 %ld-r  ;
: ldar        0x88df.fc00 m.wx  %lsx0  ;
: ldarb       0x08df.fc00 m.w   %lsx0  ;
: ldarh       0x48df.fc00 m.w   %lsx0  ;
: ldaxp       0x887f.8000 m.wx  %lsx2  ;
: ldaxr       0x885f.fc00 m.wx  %lsx0  ;
: ldaxrb      0x085f.fc00 m.w   %lsx0  ;
: ldaxrh      0x485f.fc00 m.w   %lsx0  ;
: ldtr        0xb840.0800 m.wx  %lsi9  ;
: ldtrb       0x3840.0800 m.w   %lsi9  ;
: ldtrh       0x7840.0800 m.w   %lsi9  ;
: ldtrsb      0x3880.0800 m.wx  %lsi9a  ;
: ldtrsh      0x7880.0800 m.wx  %lsi9a  ;
: ldtrsw      0xb880.0800 m.x   %lsi9  ;
: ldur        0x3840.0000 m.wxbhsdqv  %lsi9b  ;
: ldurb       0x3880.0000 m.w   %lsi9  ;
: ldurh       0x7880.0000 m.w   %lsi9  ;
: ldursb      0x3840.0000 m.w   %lsi9  ;
: ldursh      0x7840.0000 m.w   %lsi9  ;
: ldursw      0xb880.0000 m.x   %lsi9  ;
: ldxp        0x887f.0000 m.wx  %lsx2  ;
: ldxr        0x885f.7c00 m.wx  %lsx0  ;
: ldxrb       0x085f.7c00 m.w   %lsx0  ;
: ldxrh       0x485f.7c00 m.w   %lsx0  ;
: lslv        0x1ac0.2000 m.wx  %dp2  ;
: lsrv        0x1ac0.2400 m.wx  %dp2  ;
: madd        0x1b00.0000 m.wx  %dp4b  ;
: mneg        0x1b00.fc00 m.wx  %dp3b  ;
: movk        <asm  3  wxd,  mov-nzk-imm  ^mov-nzk  asm>  ;
: movn        <asm  0  wxd,  mov-nzk-imm  ^mov-nzk  asm>  ;
: movz        <asm  2  wxd,  mov-nzk-imm  ^mov-nzk  asm>  ;
: mrs         0xd530.0000  %mrs   ;
: mrs#        0xd530.0000  %mrs#  ;
: msr         0xd500.0000  %msr   ;
: msr#        0xd510.0000  %msr#  ;
: msub        0x1b00.8000 m.wx  %dp4b  ;
: negs        <asm 1    1  wxd, [wxzn] wxm ashift ^ashift  asm> ;
: ngc         0x5a00.03e0 m.wx  %adc2  ;
: ngcs        0x7a00.03e0 m.wx  %adc2  ;
: nop         0xd503.201f %op  ;
: vnot        0x2E20.5800 m.v#b   %v2same  ;  \ XXX name conflict
: pmull       0x0E20.E000 m.v.8h1q  %pmull  ;
: pmull2      0x4E20.E000 m.v.8h1q  %pmull2  ;
: raddhn      0x2E20.4000 m.v#bhs  %v3narrow  ;
: raddhn2     0x6E20.4000 m.v#bhs  %v3narrow  ;
: rev         0x5ac0.0800 m.wx  %rev  ;
: rev16       0x0E20.1800 m.v#b   0x5ac0.0400 m.wx  %2same-gv  ;
: rev32       0x2E20.0800 m.v#bh  0xdac0.0800 m.wx  %2same-gv  ;
: ror         <asm  d=n,  #? if  m.wx rd??  rn->rm ^extr  else  0x1ac0.2c00 m.wx  regshift  then  asm>  ;
: rorv        0x1ac0.2c00 m.wx  %dp2  ;
: rshrn       0x0F00.8C00 m.v#bhs  %v2#narrow  ;
: rshrn2      0x4F00.8C00 m.v#bhs  %v2#narrow  ;
: rsubhn      0x2E20.6000 m.v#hsd  %v3narrow  ;
: rsubhn2     0x6E20.6000 m.v#hsd  %v3narrow  ;
: sabal       0x0E20.5000 m.v#hsd  %v3long  ;
: sabal2      0x4E20.5000 m.v#hsd  %v3long  ;
: sabdl       0x0E20.7000 m.v#hsd  %v3long  ;
: sabdl2      0x4E20.7000 m.v#hsd  %v3long  ;
: sadalp      0x0E20.6800 m.v#hsd  %v2long  ;
: saddl       0x0E20.0000 m.v#hsd  %v3long  ;
: saddl2      0x4E20.0000 m.v#hsd  %v3long  ;
: saddlp      0x0E20.2800 m.v#hsd  %v2long  ;
: saddlv      0x0E30.3800 m.hsd  %long-across  ;
: saddw       0x0E20.1000 m.v#hsd  %v3wide  ;
: saddw2      0x4E20.1000 m.v#hsd  %v3wide  ;
: sbc         0x5a00.0000 m.wx  %dp2  ;
: sbcs        0x7a00.0000 m.wx  %dp2  ;
: sev         0xd503.209f %op  ;
: sevl        0xd503.20bf %op  ;
: sha1c       0x5E00.0000 m.s   %3sha  ;
: sha1h       0x5E28.0800 m.s   %2sha  ;
: sha1m       0x5E00.2000 m.s   %3sha  ;
: sha1p       0x5E00.1000 m.s   %3sha  ;
: sha1su0     0x5E00.3000 m.v.4s  %3sha  ;
: sha1su1     0x5E28.1800 m.v.4s  %2sha  ;
: sha256h     0x5E00.4000 m.q   %3sha  ;
: sha256h2    0x5E00.5000 m.q   %3sha  ;
: sha256su0   0x5E28.2800 m.v.4s  %2sha  ;
: sha256su1   0x5E00.6000 m.v.4s  %3sha  ;
: shadd       0x0E20.0400 m.v#bhs  %v3same  ;
: shll        0x2E21.3800 m.v#hsd  %v2long  ;
: shll2       0x6E21.3800 m.v#hsd  %v2long  ;
: shrn        0x0F00.8400 m.v#bhs  %v2#narrow  ;
: shrn2       0x4F00.8400 m.v#bhs  %v2#narrow  ;
: shsub       0x0E20.2400 m.v#bhs  %v3same  ;
: smaddl      0x9b20.0000 m.x  %dp4a  ;
: smnegl      0x9b20.fc00 m.x  %dp3a  ;
: smov        <asm  0x0E00.2C00  ^simd-umov   asm>  ;
: smsubl      0x9b20.8000 m.x  %dp4a  ;
: sqrshl      0x0E20.0C00 m.v#bhsd  0x5E20.0C00 m.bhsd  %3same-nv  ;
: sshll       0x0F00.A400 m.v#bhs  %v2#long  ;
: sshll2      0x4F00.A400 m.v#bhs  %v2#long  ;
: ssubl       0x0E20.2000 m.v#hsd  %v3long  ;
: ssubl2      0x4E20.2000 m.v#hsd  %v3long  ;
: ssubw       0x0E20.3000 m.v#hsd  %v3wide  ;
: ssubw2      0x4E20.3000 m.v#hsd  %v3wide  ;
: st1r        0x0D00.C000  1 %ld-m  ;
: st2r        0x0D20.C000  2 %ld-m  ;
: st3r        0x0D00.E000  3 %ld-m  ;
: st4r        0x0D20.E000  4 %ld-m  ;
: stlr        0x889f.fc00 m.wx  %lsx0  ;
: stlrb       0x089f.fc00 m.w   %lsx0  ;
: stlrh       0x489f.fc00 m.w   %lsx0  ;
: stlxp       0x8820.8000 m.wx  %lsx3  ;
: stlxr       0x8800.fc00 m.wx  %lsx1  ;
: stlxrb      0x0800.fc00 m.w   %lsx1  ;
: stlxrh      0x4800.fc00 m.w   %lsx1  ;
: sttr        0xb800.0800 m.wx   %lsi9  ;
: sttrb       0x3800.0800 m.w   %lsi9  ;
: sttrh       0x7800.0800 m.w   %lsi9  ;
: stur        0x3800.0000 m.wxbhsdqv  %lsi9b  ;
: sturb       0x3800.0000 m.w   %lsi9  ;
: sturh       0x7800.0000 m.w   %lsi9  ;
: stxp        0x8820.0000 m.wx  %lsx3  ;
: stxr        0x8800.7c00 m.wx  %lsx1  ;
: stxrb       0x0800.7c00 m.w   %lsx1  ;
: stxrh       0x4800.7c00 m.w   %lsx1  ;
: subhn       0x0E20.6000 m.v#bhs  %v3narrow  ;
: subhn2      0x4E20.6000 m.v#bhs  %v3narrow  ;
: svc         0xd400.0001 %exception  ;
: sxtl        0x0F00.A400 m.v#hsd  %v2#long  ;
: sxtl2       0x4F00.A400 m.v#hsd  %v2#long  ;
: tbl         0x0E00.0000 m.v#b  %tbl   ;
: tbl1        0x0E00.0000 m.v#b  %tbln  ;
: tbl2        0x0E00.2000 m.v#b  %tbln  ;
: tbl3        0x0E00.4000 m.v#b  %tbln  ;
: tbl4        0x0E00.6000 m.v#b  %tbln  ;
: tbnz        <asm  rd,  #uimm6, >r  br-target  r>  1  ^tst-br-imm  asm>  ;
: tbx         0x0E00.1000 m.v#b  %tbl   ;
: tbx1        0x0E00.1000 m.v#b  %tbln  ;
: tbx2        0x0E00.3000 m.v#b  %tbln  ;
: tbx3        0x0E00.5000 m.v#b  %tbln  ;
: tbx4        0x0E00.7000 m.v#b  %tbln  ;
: tbz         <asm  rd,  #uimm6, >r  br-target  r>  0  ^tst-br-imm  asm>  ;
: tlbi        <asm  tlbi-parse  ,xreg?  system  asm>  ;
: trn1        0x0E00.2800 m.v#bhsd %v3same  ;
: trn2        0x0E00.6800 m.v#bhsd %v3same  ;
: tst         <asm  3  0  wxn, [wxzd]  "#"? if log-imm else log-reg then  asm>  ;
: uabal       0x2E20.5000 m.v#hsd  %v3long  ;
: uabal2      0x6E20.5000 m.v#hsd  %v3long  ;
: uabdl       0x2E20.7000 m.v#hsd  %v3long  ;
: uabdl2      0x6E20.7000 m.v#hsd  %v3long  ;
: uadalp      0x2E20.6800 m.v#hsd  %v2long  ;
: uaddl       0x2E20.0000 m.v#hsd  %v3long  ;
: uaddl2      0x6E20.0000 m.v#hsd  %v3long  ;
: uaddlp      0x2E20.2800 m.v#hsd  %v2long  ;
: uaddlv      0x2E30.3800 m.hsd  %long-across  ;
: uaddw       0x2E20.1000 m.v#hsd  %v3wide  ;
: uaddw2      0x6E20.1000 m.v#hsd  %v3wide  ;
: udiv        0x1ac0.0800 m.wx  %dp2  ;
: uhadd       0x2E20.0400 m.v#bhs  %v3same  ;
: uhsub       0x2E20.2400 m.v#bhs  %v3same  ;
: umaddl      0x9ba0.0000 m.x  %dp4a  ;
: umov        <asm  0x0E00.3C00  ^simd-umov   asm>  ;
: umnegl      0x9ba0.fc00 m.x  %dp3a  ;
: umsubl      0x9ba0.8000 m.x  %dp4a  ;
: uqadd       0x2E20.0C00 m.v#bhsd  0x7E20.0C00 m.bhsd  %3same-nv  ;
: uqrshl      0x2E20.5C00 m.v#bhsd  0x7E20.5C00 m.bhsd  %3same-nv  ;
: uqsub       0x2E20.2C00 m.v#bhsd  0x7E20.2C00 m.bhsd  %3same-nv  ;
: urecpe      0x0EA1.C800 m.v#s    %v2same  ;
: ursqrte     0x2EA1.C800 m.v#s    %v2same  ;
: ushl        0x2E20.4400 m.v#bhsd  0x7E20.4400 m.d  %3same-nv  ;
: ushll       0x2F00.A400 m.v#hsd  %v2#long  ;
: ushll2      0x6F00.A400 m.v#hsd  %v2#long  ;
: usqadd      0x2E20.3800 m.v#bhsd  0x7E20.3800 m.bhsd  %3same-nv  ;
: usubl       0x2E20.2000 m.v#hsd  %v3long  ;
: usubl2      0x6E20.2000 m.v#hsd  %v3long  ;
: usubw       0x2E20.3000 m.v#hsd  %v3wide  ;
: usubw2      0x6E20.3000 m.v#hsd  %v3wide  ;
: uxtl        0x2F00.A400 m.v#hsd  %v2#long  ;
: uxtl2       0x6F00.A400 m.v#hsd  %v2#long  ;
: wfe         0xd503.205f %op  ;
: wfi         0xd503.207f %op  ;
: xtn         0x0E21.2800 m.v#bhs  %v2narrow  ;
: xtn2        0x4E21.2800 m.v#bhs  %v2narrow  ;
: yield       0xd503.203f %op  ;

\ bitfields
: bfi         <asm  0x3300.0000 m.wx  d=n, #bfi imms<immr   bitfield  asm>  ;
: bfm         <asm  0x3300.0000 m.wx  d=n, #bfm             bitfield  asm>  ;
: bfxil       <asm  0x3300.0000 m.wx  d=n, #bfx imms>=immr  bitfield  asm>  ;
: sbfiz       <asm  0x1300.0000 m.wx  d=n, #bfi             bitfield  asm>  ;
: sbfm        <asm  0x1300.0000 m.wx  d=n, #bfm             bitfield  asm>  ;
: sbfx        <asm  0x1300.0000 m.wx  d=n, #bfx             bitfield  asm>  ;
: ubfiz       <asm  0x5300.0000 m.wx  d=n, #bfi             bitfield  asm>  ;
: ubfm        <asm  0x5300.0000 m.wx  d=n, #bfm             bitfield  asm>  ;
: ubfx        <asm  0x5300.0000 m.wx  d=n, #bfx             bitfield  asm>  ;


