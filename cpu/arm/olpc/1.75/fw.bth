purpose: Build OFW Forth dictionary for OLPC XO-1.75
\ See license at end of file

dictionary: ${BP}/cpu/arm/olpc/1.75/build/prefw.dic
command: &armforth &dictionary &this
build-now

\ " fw.tag" r/w create-file drop  tag-file !

hex
\ ' $report-name is include-hook
\ ' noop is include-hook

: confirm-selftest?  ( -- flag )  true  ;  \ XXX implement me

fload ${BP}/cpu/arm/olpc/1.75/devices.fth

[ifndef] virtual-mode
warning off
: stand-init-io
   stand-init-io
   go-fast         \ From mmuon.fth
;
warning on
[then]

fload ${BP}/cpu/arm/linux.fth
d# 9999 to arm-linux-machine-type  \ Marvell Jasper

\ Add a tag describing the linear frame buffer
: mmp-fb-tag,  ( -- )
   8 tag-l,
   h# 54410008 tag-l, \ ATAG_VIDEOLFB
   d# 1200 tag-w,     \ Width
   d#  900 tag-w,     \ Height
   d#   24 tag-w,     \ Depth
   d# 1200 3 * tag-w, \ Pitch
   fb-pa      tag-l,  \ Base address
   d# 1200 3 *  d# 900 *  tag-l,  \ Total size - perhaps could be larger
   8     tag-b,       \ Red size
   d#  0 tag-b,       \ Red position
   8     tag-b,       \ Green size
   d#  8 tag-b,       \ Green position
   8     tag-b,       \ Blue size
   d# 16 tag-b,       \ Blue position
   0     tag-b,       \ Rsvd size
   d# 24 tag-b,       \ Rsvd position
;
' mmp-fb-tag, to fb-tag,

\ fload ${BP}/cpu/arm/mmp2/usb.fth

\ false to stand-init-debug?
true to stand-init-debug?

: protect-fw  ( -- )  ;

hex
: i-key-wait  ( ms -- pressed? )
   cr ." Type 'i' to interrupt stand-init sequence" cr   ( ms )
   0  do
      ukey?  if
         ukey upc ascii I  =  if  true unloop exit  then
      then
      1 ms
   loop
   false
;

warning @  warning off 
: init
\ initial-heap add-memory
   init

   standalone?  if
      disable-interrupts
      d# 1000
      i-key-wait  if
\        protect-fw
         ." Interacting" cr  hex interact
      then
      \ Turn on USB power here to overlap the time with other startup actions
      usb-power-on
   then
;
warning !
[then]

: (.firmware)  ( -- )
   ." Open Firmware  "  .built  cr
   ." Copyright 2010 FirmWorks  All Rights Reserved" cr
;
' (.firmware) to .firmware

: screen-#lines  ( -- n )
   screen-ih 0=  if  default-#lines exit  then
   screen-ih  package( #lines )package
;
' screen-#lines to lines/page

true value text-on?
: text-off  ( -- )
   text-on?  if
      screen-ih remove-output
      false to text-on?
   then
;
: text-on   ( -- )
   text-on? 0=  if
      screen-ih add-output
      cursor-on
      true to text-on?
   then
;

fload ${BP}/cpu/x86/pc/olpc/help.fth

[ifdef] notyet
fload ${BP}/cpu/x86/pc/olpc/gamekeys.fth

: emacs  ( -- )
   false to already-go?
   boot-getline to boot-file   " rom:emacs" $boot
;

fload ${BP}/ofw/gui/ofpong.fth
fload ${BP}/cpu/x86/pc/olpc/life.fth
[then]

" u:\boot\olpc.fth ext:\boot\olpc.fth int:\boot\olpc.fth ext:\zimage /prober /usb/ethernet /usb/wlan"
   ' boot-device  set-config-string-default

\needs ramdisk  " " d# 128 config-string ramdisk
" "   ' boot-file      set-config-string-default   \ Let the boot script set the cmdline

\ Eliminate 4 second delay in install console for the case where
\ there is no keyboard.  The delay is unnecessary because the screen
\ does not go blank when the device is closed.
patch drop ms install-console

alias reboot bye

alias crcgen drop  ( crc byte -- crc' )

\ Dictionary growth size for the ARM Image Format header
\ 1 section   before origin  section table
h# 10.0000      h# 8000 -      h# 4000 -      dictionary-size !

fload ${BP}/cpu/arm/saverom.fth  \ Save the dictionary for standalone startup

[ifdef] notyet
: c1-idle  ( -- )  interrupts-enabled?  if  halt  then  ;
' c1-idle to stdin-idle
[then]

fload ${BP}/ofw/core/countdwn.fth	\ Startup countdown

: console-start  ( -- )
   install-mux-io
\  cursor-off
   true to text-on?

   " //null" open-dev to null-ih  \ For text-off state
;
: keyboard-off  ( -- )
   keyboard-ih  if
      keyboard-ih remove-input
      keyboard-ih close-dev
      0 to keyboard-ih
   then
;
: interpreter-init  ( -- )
   hex
   warning on
   only forth also definitions

   install-alarm

   page-mode
   #line off

\   .built cr
;

[ifdef] notyet
: ?games  ( -- )
   rocker-right game-key?  if
      protect-fw
      time&date 5drop 1 and  if
         ['] pong guarded
      else
         ['] life-demo guarded
      then
      power-off
   then
;
: ?diags  ( -- )
   rocker-left game-key?  if
      protect-fw
      text-on  " test-all" ['] eval guarded
      ." Tests complete - powering off" cr  d# 5000 ms  power-off
   then
;

: ?scan-nand  ( -- )
   rocker-up game-key?  if
      protect-fw  text-on  ['] scan-nand guarded
   then
;
: ?fs-update  ( -- )
   button-check button-x or  button-o or  button-square or   ( mask )
   game-key-mask =  if  protect-fw try-fs-update  then
;
[then]

: startup  ( -- )
   standalone?  0=  if  exit  then

\  block-exceptions
   no-page

   console-start

[ifdef] notyet
   read-game-keys
[then]

\  text-off

   " probe-" do-drop-in

[ifdef] notyet
   sound
   ?games
[then]

   ['] false to interrupt-auto-boot?
[ifdef] probe-usb
   probe-usb
   report-disk
   report-keyboard
[then]
   " probe+" do-drop-in

   interpreter-init
[ifdef] notyet
   ?scan-nand
   ?diags
   ?fs-update
[then]
\  unblock-exceptions
   ['] (interrupt-auto-boot?) to interrupt-auto-boot?
\  ?usb-keyboard
   auto-banner?  if  banner  then

   auto-boot

   cr cr

   quit
;

: newrom
   " flash! http:\\10.20.0.14\new.rom" eval
\   " wifi media lab 802.11" eval
\   " flash http:\\18.85.46.172\new.rom" eval
;
: urom  " flash! u:\new.rom" eval  ;
: erom  " flash! ext:\new.rom" eval  ;
: no-usb-delay  " dev /usb  false to delay?  dend"  evaluate  ;
: null-fsdisk
   " dev /null : write-blocks-start 3drop ; : write-blocks-finish ; dend" evaluate
   " devalias fsdisk //null" evaluate
;

\ tag-file @ fclose  tag-file off

.( --- Saving fw.dic ...)
" fw.dic" $save-forth cr

fload ${BP}/cpu/arm/mmp2/rawboot.fth

.( --- Saving fw.img --- )  cr " fw.img" $save-rom

\ LICENSE_BEGIN
\ Copyright (c) 2010 FirmWorks
\ 
\ Permission is hereby granted, free of charge, to any person obtaining
\ a copy of this software and associated documentation files (the
\ "Software"), to deal in the Software without restriction, including
\ without limitation the rights to use, copy, modify, merge, publish,
\ distribute, sublicense, and/or sell copies of the Software, and to
\ permit persons to whom the Software is furnished to do so, subject to
\ the following conditions:
\ 
\ The above copyright notice and this permission notice shall be
\ included in all copies or substantial portions of the Software.
\ 
\ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
\ EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
\ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
\ NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
\ LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
\ OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
\ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
\
\ LICENSE_END
