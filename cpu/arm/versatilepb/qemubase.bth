purpose: Load file for OFW on ARM VersatilePB as emulated by QEMU
\ See license at end of file

\ Example QEMU command line:
\   qemu-system-arm -M versatilepb -m 32 -kernel qemubase.rom -serial vc
\ Then type "Ctrl-Alt 3" in the QEMU popup window to get the serial console
\ The memory size (32 shown above) is not critical - 16 or greater works.

dictionary: ${BP}/cpu/arm/build/basefw.dic
command: &armforth &dictionary &this
build-now

\ ' $report-name is include-hook


h# 8.0000 constant initial-heap-size

: (initial-heap)  ( -- adr len )   limit  initial-heap-size  ;
' (initial-heap) to initial-heap


h# 101f1000 constant uart-base  \ UART0 base address on VersatilePB board

fload ${BP}/cpu/arm/pl011-diaguart.fth	\ PL011 UART

\ Setup the console I/O vectors for a simple UART
: install-uart-io  ( -- )
   inituarts

   ['] lf-pstr          is newline-pstring
   ['] ukey?            is key?
   ['] ukey             is (key
   ['] uemit            is (emit
   ['] default-type     is (type
   ['] emit1            is emit
   ['] type1            is type
   ['] crlf             is cr
   ['] true             is (interactive?
   ['] cancel           is light
;

\ Install the simple UART driver from the standalone I/O init chain
: stand-init-io  ( -- )
   stand-init-io
   install-uart-io
;

\ This is some glue code to convert the machine setup that QEMU gives us
\ to the setup that start-forth (see arm/boot.fth) wants.
\ We get here via a call instruction at origin+8, which is inserted below

code stand-cold-code    ( r0: 0  r1: board-id  r2: &kernel-args  lr: &aif_header+8c )
   here  origin 8 +  put-call  \ Insert call instruction

   \ Put the arguments in safe registers
   sub   r6,lr,#0x8c        \ r6 points to header (lr set by code at origin)
   mov   r7,#0              \ r7: functions
   ldr   r8,[r2,#0x1c]      \ r8: memtop  - From Linux kernel args set by QEMU
                            \  r9 is up
   mov   r10,#0             \ r10: argc
   mov   r11,r2             \ r11: argv (kernel args)
   mov   r12,`initial-heap-size`  \ r12: initial-heap-size

   b     'code start-forth  \ Branch to the generic startup code
end-code


fload ${BP}/cpu/arm/saverom.fth  \ Save the dictionary for standalone startup

.( --- Saving qemubase.rom --- )  cr " qemubase.rom" $save-rom

\ LICENSE_BEGIN
\ Copyright (c) 2009 FirmWorks
\
\ Permission is hereby granted, free of charge, to any person obtaining
\ a copy of this software and associated documentation files (the
\ "Software"), to deal in the Software without restriction, including
\ without limitation the rights to use, copy, modify, merge, publish,
\ distribute, sublicense, and/or sell copies of the Software, and to
\ permit persons to whom the Software is furnished to do so, subject to
\ the following conditions:
\
\ The above copyright notice and this permission notice shall be
\ included in all copies or substantial portions of the Software.
\
\ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
\ EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
\ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
\ NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
\ LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
\ OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
\ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
\
\ LICENSE_END
